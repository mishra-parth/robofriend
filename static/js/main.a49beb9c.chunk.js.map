{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js","robots.js"],"names":["CardList","robots","Error","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","componentDidCatch","error","info","setState","hasError","render","state","React","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","this","filteredRobots","filter","robot","name","toLowerCase","includes","trim","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","id","username","email","document","getElementById"],"mappings":"yOAuBeA,MArBf,YAEE,MAFyB,EAARC,OAEX,IAAIC,MAAM,cCFH,SAASC,EAAT,GAA+C,EAA3BC,YAA4B,IAAfC,EAAc,EAAdA,aAChD,OACI,qBAAKC,UAAY,MAAjB,SACI,uBACAA,UAAY,mCACZC,KAAO,OACPC,YAAc,gBACdC,SAAYJ,M,MCTL,SAASK,EAAOC,GAC9B,OACC,qBAAKC,MAAS,CAACC,UAAU,OAAQC,OAAS,kBAAmBC,OAAQ,SAArE,SACEJ,EAAMK,W,ICDWC,E,kDACjB,WAAYN,GAAO,IAAD,8BACd,cAAMA,IAMVO,kBAAkB,SAACC,EAAOC,GACtB,EAAKC,SAAS,CAACC,UAAW,KARZ,EAWlBC,OAAS,WACL,OAAI,EAAKC,MAAMF,SACJ,iEAEJ,EAAKX,MAAMK,UAblB,EAAKQ,MAAQ,CACTF,UAAW,GAHD,E,UADqBG,IAAMC,WCK5BC,E,kDACpB,aAAc,IAAD,8BACZ,gBAgBDC,eAAiB,SAACC,GACjB,EAAKR,SAAS,CAACjB,YAAayB,EAAMC,OAAOC,SAhBzC,EAAKP,MAAQ,CACZvB,OAAQ,GACRG,YAAa,IAJF,E,gEAQO,IAAD,OAClB4B,MAAM,8CAA8CC,MAAK,SAAAC,GACxD,OAAOA,EAASC,UACdF,MAAK,SAAAG,GACP,EAAKf,SAAS,CAACpB,OAASmC,S,+BAShB,IAAD,EACyBC,KAAKb,MAA9BvB,EADA,EACAA,OAASG,EADT,EACSA,YACXkC,EAAiBrC,EAAOsC,QAAO,SAAAC,GACpC,OAAOA,EAAMC,KAAKC,cAAcC,SAAUvC,EAAYsC,cAAcE,WAErE,OAAQ3C,EAAO4C,OAGb,sBAAKvC,UAAY,cAAjB,UACC,6CACA,qBAAKA,UAAY,aAAjB,SACC,cAACH,EAAD,CAAWG,UAAY,YAAYD,aAAcgC,KAAKT,mBAEvD,cAAClB,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUT,OAAUqC,WATzB,oBAAIhC,UAAY,KAAhB,qC,GA5B+BoB,aCKlBoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAAS/B,OACP,cAAC,IAAMgC,WAAP,UACE,cAAC,EAAD,CAAKtD,OCVa,CACpB,CACEuD,GAAI,EACJf,KAAM,gBACNgB,SAAU,OACVC,MAAO,qBAET,CACEF,GAAI,EACJf,KAAM,eACNgB,SAAU,YACVC,MAAO,qBAET,CACEF,GAAI,EACJf,KAAM,mBACNgB,SAAU,WACVC,MAAO,sBAET,CACEF,GAAI,EACJf,KAAM,mBACNgB,SAAU,WACVC,MAAO,6BAET,CACEF,GAAI,EACJf,KAAM,mBACNgB,SAAU,SACVC,MAAO,4BAET,CACEF,GAAI,EACJf,KAAM,uBACNgB,SAAU,mBACVC,MAAO,2BAET,CACEF,GAAI,EACJf,KAAM,kBACNgB,SAAU,eACVC,MAAO,0BAET,CACEF,GAAI,EACJf,KAAM,2BACNgB,SAAU,gBACVC,MAAO,wBAET,CACEF,GAAI,EACJf,KAAM,kBACNgB,SAAU,WACVC,MAAO,2BAET,CACEF,GAAI,GACJf,KAAM,qBACNgB,SAAU,iBACVC,MAAO,+BD/CTC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.a49beb9c.chunk.js","sourcesContent":["import Card from './card'\r\n\r\nfunction CardList({robots}){\r\n\tif(true){\r\n\t\tthrow new Error('NOOOOOOO!')\r\n\t}\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user, i) =>{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<Card key = {user.id} \r\n\t\t\t\t\t\tid = {user.id} \r\n\t\t\t\t\t\tname = {user.name} \r\n\t\t\t\t\t\temail = {user.email} \r\n\t\t\t\t\t\t/>\r\n\t\t\t    )\r\n\t\t\t\t})}\r\n\t\t</div>\r\n\t\t)\r\n\t\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react'\r\n\r\nexport default function SearchBox({searchfield, searchChange}){\r\nreturn(\r\n    <div className = 'pa2'>\r\n        <input \r\n        className = \"pa3 ba b--green bg-lightest-blue\" \r\n        type = 'text' \r\n        placeholder = 'Search Robots'\r\n        onChange = {searchChange} \r\n        />\r\n    </div>\r\n)\r\n}\r\n","export default function Scroll(props){\r\n\treturn(\r\n\t\t<div style = {{overflowY:'auto', border : '1px solid black', height: '600px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\n\r\nexport default class ErrorBoundary extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch=(error, info)=>{\r\n        this.setState({hasError : true})\r\n    }\r\n\r\n    render = () =>{\r\n        if (this.state.hasError){\r\n            return <h1>OOPPSSS........That is not good</h1>\r\n        }\r\n        return this.props.children\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\n\r\nexport default class App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()//super is used so that we can acces this\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\").then(response =>{\r\n\t\t\treturn response.json()\r\n\t\t}).then(users =>{\r\n\t\t\tthis.setState({robots : users})\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tonSearchChange = (event) =>{// use arrow function as when this is runned in searchbox, it will think this of the input tag in searchbox so arrow function is must\r\n\t\tthis.setState({searchfield: event.target.value}) // set state is used to seat the state to anything like here we are setting the searchfield's value to the event's value so that when it gets the searchfield value it is the event value not \"\" \r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { robots , searchfield } = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes( searchfield.toLowerCase().trim())\r\n\t\t})\r\n\t\treturn !robots.length?\r\n\t\t<h1 className = \"tc\">LOADING............</h1>:\r\n\t\t(\r\n\t\t\t\t<div className = 'tc the_page'>\r\n\t\t\t\t\t<h1>RoboFriends</h1>\r\n\t\t\t\t\t<div className = ' searchbox'>\r\n\t\t\t\t\t\t<SearchBox className = \"searchbox\" searchChange={this.onSearchChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t\t<CardList robots = {filteredRobots} />\r\n\t\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\nimport { robots } from './robots.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App robots = {robots} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n"],"sourceRoot":""}